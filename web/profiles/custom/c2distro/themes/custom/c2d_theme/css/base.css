@charset "UTF-8";
/**
 * @file
 * SMACSS: base
 *
 * CSS reset, HTML elements and any other very basic stuffs.
 * All basic stuff is in base subdirectory.
 *
 * ITCSS: generic, elements
 */
/**
 * Imports
 *
 * First import our custom variables and mixins
 */
/**
 * @file
 * Sass index file
 *
 * The main importer and organizer sass file.
 *
 */
/**
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules.
 * Settings that are connected to one and only module are a part of the module
 * itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 */
/**
 * @file
 * Settings
 *
 * Setting files contain **global** configurations that are shared by more than
 * one modules. Settings that are connected to one and only module are a part
 * of the module itself.
 * Local configurations should be contained into the modules (objects,
 * components, etc.) that are related to.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Breakpoint Settings
 *
 * Foundation for Sites 6 Media Queries
 * @see documentation, usage: https://foundation.zurb.com/sites/docs/media-queries.html
 *
 * - Define breakpoint variables as Sass map
 * - Provide a breakpoint variable for print media
 * - Provide breakpoint classes for Foundation for Sites 6 XY Grid
 *
 * We have to use here only px, it will be converted to em by
 * Foundation's utility.
 */
/**
 * @file
 * Color Settings
 *
 * - Define color variables
 */
/**
 * @file
 * Foundation for Sites 6 XY Grid Settings
 *
 * @author ZURB
 * @licence MIT
 * @see options: https://foundation.zurb.com/sites/docs/xy-grid.html
 *
 * - Define some global Foundation 6 settings what required for XY Grid
 * - Define breakpoint variables
 */
/**
 * Sets the text direction of the CSS. Can be either `ltr` or `rtl`.
 *
 * @type Keyword
 */
/**
 * Enables flexbox for components that support it.
 *
 * @type Boolean
 */
/**
 * @file
 * Typography Settings
 *
 * - Import Webfonts
 * - Define Font-families
 * - Define Typography-related global variables
 */
/**
 * Tools
 *
 * Globally used mixins and functions.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * @file
 * Tools
 *
 * Tools are sets of globally used sass mixins and functions. Mixins that are
 * connected to one and only module are a part of the module itself.
 * It’s important not to output any CSS in the first 2 layers.
 */
/**
 * Mixin tools
 */
/**
 * @file
 * Clearfix Tool
 *
 * The clearfix utility is used on elements that need to automatically clear
 * their child elements.
 *
 * Use it wherever you need it.
 *
 *
 * @example
 *   .o-grid {
 *     @include clearfix;
 *   }
 */
/**
 * @file
 * Form Tool
 *
 * Form related mixins and functions.
 */
/**
 * Placeholder mixin
 *
 * With it you can theming input placeholders easily for any browsers.
 *
 * @example
 *  @include input-placeholder {
 *    color: grey;
 *  }
 */
/**
 * Webkit autofill mixin
 *
 * With it you can theming autofilled inputs easily.
 * You must declare the font color, other rules optionally.
 *
 * @example
 *  @include autofill($color-primary) {
 *    background: lighten($color-primary, 30%);
 *  }
 */
/**
 * @file
 * Foundation for Sites 6 XY Grid
 *
 * @author ZURB
 * @licence MIT
 * @see options: https://foundation.zurb.com/sites/docs/xy-grid.html
 *
 * - Import Foundation for Site 6 required vendor libraries
 * - Import Foundation for Sites 6 Util Library
 * - Import Foundation for Sites 6 XY Grid
 */
/**
 * @file
 *** FOUNDATION FOR SITES AND CUSTOM MIXINS
 */
/**
 * @group Foundation for Sites mixins
 * Mixins placeholder file
 * @todo These are mostly from Foundation and should be removed and used straight from Foundation.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  display: table;
}
.clearfix:after {
  clear: both;
}

/**
 * Horizontally or vertically aligns the items within a flex container.
 *
 * @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`,
 * `right`, `center`, `justify`, or `spaced`. Or, set it to `null`
 * (the default) to not set horizontal alignment.
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Vertically align a single column within a flex row. Apply this mixin to a
 * flex column.
 *
 * @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`,
 * `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not
 * set vertical alignment.
 */
/**
 * Changes the source order of a flex child. Children with lower numbers appear
 * first in the layout.
 *
 * @param {Number} $order [0] - Order number to apply.
 */
/**
 * Change flex-direction
 *
 * @param {Keyword} $direction [row] - Flex direction to use. Can be
 * - row (default): same as text direction
 * - row-reverse: opposite to text direction
 * - column: same as row but top to bottom
 * - column-reverse: same as row-reverse top to bottom
 */
/**
 * @include flex-wrap(nowrap | wrap | wrap-reverse);
 * Default: nowrap
 */
/**
 * @include flex-flow(values);
 * Default: row nowrap
 */
/**
 * @include order(int);
 * Default: 0
 */
/**
 * @include flex-grow(int);
 * Default: 1
 */
/**
 * @include flex-shrink(int);
 * Default: 0
 */
/**
 * @include flex-basis(int);
 * Default: auto
 */
/**
 * @include justify-content(flex-start | flex-end | center | space-between
 * | space-around);
 * Default: flex-start
 */
/**
 * @include align-items(flex-start | flex-end | center | baseline | stretch);
 * Default: stretch
 */
/**
 * @include align-self(auto | flex-start | flex-end | center | baseline | stretch);
 * Default: auto
 */
/**
 * @include align-content(flex-start | flex-end | center | space-between | space-around | stretch);
 * Default: stretch
 */
/**
 * @group theming mixins
 */
/**
 * @file
 * Stretched-lnk Tool ***
 ******************************************************************************
 *
 * Make any HTML element or a component clickable by "stretching" a nested link
 * via css.
 *
 * Borrowed from Bootstrap 4
 * @link https://getbootstrap.com/docs/4.3/utilities/stretched-link
 *
 * Include `stretched-link` mixin to a link (`<a>` element) to make its
 * containing block clickable via a `::after` pseudo element.
 * In most cases, this means that an element with `position: relative;` that
 * contains a link with included `stretched-link` mixin is clickable.
 *
 * @example
 *   .o-media {
 *     position: relative;
 *
 *     &__link {
 *       @include stretched-link;
 *     }
 *   }
 *
 * You can use it as utility class too:
 * @see 6.utilities/_utilities.stretched-link.scss
 */
/**
 * @file
 * Text Tool
 ******************************************************************************
 *
 * Text block related tools
 *
 * @see 6.utilities/_utilities.text.scss for BEM based class named version
 */
/**
 * Text-align Mixin
 *
 * @parameter {string} $align - Align value ex.: left.
 * @parameter {string} $last - Optional, align value for justify aligned last line.
 *
 *
 * Examples
 *
 * Simple text align.
 *
 * @example
 *   .c-button {
 *     @include text-align(center);
 *   }
 *
 * Align last line of a justify text.
 *
 * @example
 *   .section__lead {
 *     @include text-align(justify, left);
 *   }
 */
/**
 * Text Overflow behaviors
 *
 * Text Ellipsis
 *
 * Overflow behavior: display an ellipsis to represent clipped text.
 * Only works on single line text!
 *
 * Borrowed from Spectre.css
 * @author Yan Zhu <picturepan2@hotmail.com>
 * @link https://picturepan2.github.io/spectre/utilities/text.html
 *
 * @example
 *   .article__lead {
 *     @include text-ellipsis;
 *   }
 */
/**
 * Text Clip
 *
 * Overflow behavior: truncate the text.
 *
 * Borrowed from Spectre.css
 * @author Yan Zhu <picturepan2@hotmail.com>
 * @link https://picturepan2.github.io/spectre/utilities/text.html
 *
 * @example
 *   .article__lead {
 *     @include text-clip;
 *   }
 */
/**
 * Text Break
 *
 * Text may be broken at arbitrary points.
 *
 * Borrowed from Spectre.css
 * @author Yan Zhu <picturepan2@hotmail.com>
 * @link https://picturepan2.github.io/spectre/utilities/text.html
 *
 * @example
 *   .article__body {
 *     @include text-break;
 *   }
 */
/**
 * @file
 * CSS Triangle Tool
 *
 * Generates a triangle pointing in a specified direction.
 *
 * Borrowed from bourbon
 * @link https://www.bourbon.io/docs/latest#triangle
 * *
 * @example
 *   .button__arrow {
 *     @include make-triangle(right, 1.5rem, 1rem, $color-secondary);
 *   }
 */
/**
 * Make Triangle mixin
 *
 * @parameter {string} $direction
 *   The direction the triangle should point. Accepts `up`, `up-right`,
 *   `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.
 *
 * @parameter {number (with unit)} $width
 *   Width of the triangle.
 *
 * @parameter {number (with unit)} $height
 *   Height of the triangle.
 *
 * @parameter {color} $color
 *   Color of the triangle.
 */
/**
 * @file
 * Typography Tool
 *
 * Inline typography related mixins.
 */
/**
 * Font Antialiasing
 *
 * Makes font thickness to look the same in Firefox and Webkit.
 *
 * @example
 *   h1 {
 *     @include font-smooth;
 *   }
 */
/**
 * @file
 * CSS Custom Variable Tool
 ******************************************************************************
 *
 * To write CSS variables faster in SCSS.
 */
/**
 * v() function
 *
 * @example
 *  :root {
 *    --primary: #000;
 *  }
 *
 *  color: v(primary);
 */
/**
 * @file
 * Visibility Tool
 *
 * Control the visibility, without modifying the display, of elements with
 * visibility utilities.
 *
 * @see 6.utilities/_utilities.visibility.scss for BEM based class named version
 */
/**
 * Visually Hidden
 *
 * Use visually-hidden mixin to hide elements on all devices except screen
 * readers.
 *
 * borrowed from iota.css
 * @author Dimitris Psaropoulos <info@harby.me>
 * @link https://www.iotacss.com/docs/utilities/display
 *
 * @example
 *   .page__title {
 *     @include visually-hidden;
 *   }
 */
/**
 * Focusable Visually hidden
 *
 * Use in conjunction with `visually-hidden` to only display content when it's focused.
 * Useful for "Skip to main content" links.
 * @see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
 *
 * borrowed from HTML5 Boilerplate
 *
 * @example
 *   .skip-navigation {
 *      @include visually-hidden;
 *      @include visually-hidden--focusable;
 *   }
 */
/**
 * Base
 *
 * Base styles are the default styles of base elements. It's a combination of
 * ITCSS's Generic and Elements layers.
 *
 * A Base rule is applied to an element using an element selector, a descendant
 * selector, or a child selector, along with any pseudo-classes. It doesn’t
 * include any class or ID selectors. Base styles are related to the basic
 * styles of an application, like Typography, Reset and styling of global
 * elements.
 *
 * This is the first layer which generates actual CSS.
 */
/**
 * @file
 * CSS Custom Variables
 *
 * Here you can define your CSS variables. Unlike Sass variables, these will be
 * compiled to final CSS file. You can access these values in the browsers,
 * change these on the fly via JavaScript or modify values as you need in CSS.
 *
 * If you want to use a Sass variable as value, you must interpolate that:
 *
 * @example
 *   #d24744
 *
 * With Variable Tool you can use CSS custom properties in a faster way:
 *
 * @example
 *   :root {
 *     --color-details: v(color-elements-white);
 *   }
 */
/*:root {
  --color-font: #011e41;
  --color-body: white;
}*/
/**
 * Dark version
 */
:root .global-hash-dark-version {
  --color-font: white;
  --color-body: #222327;
}

* {
  box-sizing: border-box;
}

/**
 * @file
 * Typography element
 *
 * Text elements.
 */
/**
* @group Basic elements
*/
html {
  text-rendering: optimizeLegibility;
  -webkit-tap-highlight-color: transparent;
  font-size: 62.5%;
}

body {
  font-family: "Montserrat", -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  color: #011e41;
  background-color: #efefef;
  font-size: 1.6rem;
  line-height: 2.4rem;
  word-wrap: break-word;
}

::-moz-selection {
  background-color: #26c9de;
  color: white;
}

::selection {
  background-color: #26c9de;
  color: white;
}

a {
  text-decoration: none;
  color: #011e41;
}
a:hover {
  color: black;
}
a:focus {
  outline: 0;
}

p:first-child {
  margin-top: 0;
}
p:last-child {
  margin-bottom: 0;
}

ol,
ul {
  padding: 0;
  margin: 0;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
  -webkit-padding-start: 0;
          padding-inline-start: 0;
}

ul.menu,
ul.links,
.menu ul {
  list-style: none;
  padding-left: 0;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: top;
}

h1, h2, h3, h4, h5, h6 {
  -webkit-margin-before: 0;
          margin-block-start: 0;
  -webkit-margin-after: 0;
          margin-block-end: 0;
  -webkit-margin-start: 0;
          margin-inline-start: 0;
  -webkit-margin-end: 0;
          margin-inline-end: 0;
}

select {
  -moz-appearance: none;
  /* Firefox */
  -webkit-appearance: none;
  /* Safari and Chrome */
  appearance: none;
  background: url("../images/dist/icons/chevron-down.svg") no-repeat 97% 70%;
}
select::-ms-expand {
  display: none;
}

.field--type-text-long a,
.field--name-body a {
  color: #26c9de;
  text-decoration: underline;
}
.field--type-text-long a:hover,
.field--name-body a:hover {
  text-decoration: none;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UuY3NzIiwiYmFzZS5zY3NzIiwiX2luZGV4LnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5hbGwuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLmJyZWFrcG9pbnRzLnNjc3MiLCIxLnNldHRpbmdzL19zZXR0aW5ncy5jb2xvcnMuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLmdyaWQuc2NzcyIsIjEuc2V0dGluZ3MvX3NldHRpbmdzLnR5cG9ncmFwaHkuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLmFsbC5zY3NzIiwiMi50b29scy9fdG9vbHMuY2xlYXJmaXguc2NzcyIsIjIudG9vbHMvX3Rvb2xzLmZvcm0uc2NzcyIsIjIudG9vbHMvX3Rvb2xzLmdyaWQuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLm1peGlucy5zY3NzIiwiMi50b29scy9fdG9vbHMuc3RyZXRjaGVkLWxpbmsuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLnRleHQuc2NzcyIsIjIudG9vbHMvX3Rvb2xzLnRyaWFuZ2xlLnNjc3MiLCIyLnRvb2xzL190b29scy50eXBvZ3JhcGh5LnNjc3MiLCIyLnRvb2xzL190b29scy52YXJpYWJsZS5zY3NzIiwiMi50b29scy9fdG9vbHMudmlzaWJpbGl0eS5zY3NzIiwiMy5iYXNlL19iYXNlLmNzcy1zZXR0aW5ncy5zY3NzIiwiMy5iYXNlL19iYXNlLnR5cG9ncmFwaHkuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUNBaEI7Ozs7Ozs7O0VBQUE7QUFVQTs7OztFQUFBO0FDVkE7Ozs7OztFQUFBO0FBUUE7Ozs7Ozs7OztFQUFBO0FDUkE7Ozs7Ozs7Ozs7RUFBQTtBQ0FBOzs7Ozs7Ozs7Ozs7O0VBQUE7QUNBQTs7Ozs7RUFBQTtBQ0FBOzs7Ozs7Ozs7O0VBQUE7QUFZQTs7OztFQUFBO0FBT0E7Ozs7RUFBQTtBQ25CQTs7Ozs7OztFQUFBO0FMcUJBOzs7OztFQUFBO0FNckJBOzs7Ozs7O0VBQUE7QUFTQTs7RUFBQTtBQ1RB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 */

/*# sourceMappingURL=base.css.map */
